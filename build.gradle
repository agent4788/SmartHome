group 'net.kleditzsch'
version '1.0.0'

apply plugin: 'java'

sourceCompatibility = '11'
targetCompatibility = '11'

repositories {

    maven {
        url "http://repo1.maven.org/maven2/"
    }
    jcenter {
        url "http://jcenter.bintray.com/"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '+'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '+'

    // https://mvnrepository.com/artifact/org.jdom/jdom2
    compile group: 'org.jdom', name: 'jdom2', version: '+'

    // https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '+'

    // https://mvnrepository.com/artifact/org.snmp4j/snmp4j
    compile group: 'org.snmp4j', name: 'snmp4j', version: '+'

    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '+'
    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-servlet
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '+'

    // https://mvnrepository.com/artifact/org.jtwig/jtwig-web
    compile group: 'org.jtwig', name: 'jtwig-web', version: '+'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-email
    compile group: 'org.apache.commons', name: 'commons-email', version: '+'

    // https://mvnrepository.com/artifact/commons-net/commons-net
    compile group: 'commons-net', name: 'commons-net', version: '+'
}

compileJava {
    
    options.forkOptions.jvmArgs << "--add-modules java.net.http"
    //options.compilerArgs += ["--add-modules java.net.http"]
}

task fatJar(type: Jar) {

    manifest {
        attributes  'Implementation-Title': 'SmartHome Application Server',
                    'Implementation-Version': version,
                    'Main-Class': 'net.kleditzsch.SmartHome.app.Application'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//alle Subprojekte in eine Zip Datei packen
task buildApllicationFile(type: Zip) {

    dependsOn fatJar
    
    classifier = 'app'
    into('.') {

        from 'build/libs'
        from 'shserver.service'
        into('upload/fskLogo') {

            from 'upload/fskLogo'
        }
    }
}